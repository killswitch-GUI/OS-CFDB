sudo: required

os:
  - linux

dist: xenial

language: 
  - go
  
services:
  - docker

before_install:
  - go get github.com/pulumi/travisqueue
  - travisqueue start
  - openssl aes-256-cbc -K $encrypted_3dbdf0a5463a_key -iv $encrypted_3dbdf0a5463a_iv 
    -in AWS-AMI.pem.enc -out ./AWS-AMI.pem -d 
  - eval "$(ssh-agent -s)"
  - chmod 600 ./AWS-AMI.pem
  - ssh-add ./AWS-AMI.pem
  # - curl -fsSL get.docker.com -o get-docker.sh && sh get-docker.sh
  # - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  # - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && sudo apt-get update && sudo apt-get -y install docker-ce
  - curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o docker-compose && chmod +x docker-compose && sudo mv docker-compose /bin/
  # - sudo pip install --upgrade pip
  
install:
  # required for AWS 
  - sudo pip install boto3 
  # required for production deployment
  - sudo pip install ansible
  # required for AWS images
  - sudo ansible-galaxy install -r .site/ansible-aws-ec2/requirements.yml
  
script:
  # test JSON format of OS-CFDB repo
  - python .convert.py .
  # test docker-compose configuration and build
  - cd .site && ./build.sh 
  # prep to push full repo to AWS production
  - cd ansible-aws-ec2

deploy:
  # teardown old infrustructure
  - provider: script
    skip_cleanup: true
    script: sudo bash teardown.sh
    on:
      branch: master
  # deploy master to production
  - provider: script
    skip_cleanup: true
    script: sudo bash deploy.sh
    on:
      branch:  master
  #  cleanup build states
  - provider: script
    skip_cleanup: true
    script: travisqueue finish
    on:
      branch:  master
